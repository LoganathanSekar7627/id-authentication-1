FROM tech5-softhsm-base:1.0

# can be passed during Docker build as build time environment for github branch to pickup configuration from.
ARG spring_config_label

# can be passed during Docker build as build time environment for spring profiles active 
ARG active_profile

# can be passed during Docker build as build time environment for config server URL 
ARG spring_config_url

# can be passed during Docker build as build time environment for glowroot 
ARG is_glowroot

# can be passed during Docker build as build time environment for artifactory URL
ARG artifactory_url

# environment variable to pass active profile such as DEV, QA etc at docker runtime
ENV active_profile_env=${active_profile}

# environment variable to pass github branch to pickup configuration from, at docker runtime
ENV spring_config_label_env=${spring_config_label}

# environment variable to pass spring configuration url, at docker runtime
ENV spring_config_url_env=${spring_config_url}

# environment variable for external jar dependencies
#ENV LD_LIBRARY_PATH=/so-files

# environment variable to pass glowroot, at docker runtime
ENV is_glowroot_env=${is_glowroot}

# environment variable to pass artifactory url, at docker runtime
ENV artifactory_url_env=${artifactory_url}

ENV current_module_env=authentication-kyc-service

WORKDIR /

RUN mkdir -p /config

COPY softhsm-application.conf /config/

ADD target/${current_module_env}-*.jar /opt/Tech5/${current_module_env}.jar


EXPOSE 8091

EXPOSE 9010

RUN cd /opt/Tech5
WORKDIR /opt/Tech5


CMD if [ "$is_glowroot_env" = "present" ]; then \
    wget "${artifactory_url_env}"/artifactory/libs-release-local/io/mosip/testing/glowroot.zip ; \
    yum update && yum install -y unzip ; \
    unzip glowroot.zip ; \
    rm -rf glowroot.zip ; \
    sed -i 's/<service_name>/${current_module_env}/g' glowroot/glowroot.properties ; \
    cd /opt/Tech5 && java -jar -Djava.security.debug=sunpkcs11 -javaagent:glowroot/glowroot.jar -Dspring.cloud.config.label="${spring_config_label_env}" -Dspring.profiles.active="${active_profile_env}" -Dspring.cloud.config.uri="${spring_config_url_env}" -Dloader.path=commons-codec-1.9.jar,kernel-cbeffutil-api-0.12.18.jar,t5-finger-iris-mosip-auth-v1.2.jar,ABISTech5FaceSDKAdapter_v1.5.jar,tech5-sdk-docker-v1.0.jar /opt/Tech5/${current_module_env}.jar ; \
    else \
    cd /opt/Tech5 && java -jar -Djava.security.debug=sunpkcs11 -Dspring.cloud.config.label="${spring_config_label_env}" -Dspring.profiles.active="${active_profile_env}" -Dspring.cloud.config.uri="${spring_config_url_env}" -Dloader.path=commons-codec-1.9.jar,kernel-cbeffutil-api-0.12.18.jar,t5-finger-iris-mosip-auth-v1.2.jar,ABISTech5FaceSDKAdapter_v1.5.jar,tech5-sdk-docker-v1.0.jar /opt/Tech5/${current_module_env}.jar ; \
    fi
#CMD ["java", "-Dloader.path=/tech5-sdk-v1.5.1.jar,/ABISTech5FaceSDKAdapter_v2.jar,/t5-finger-iris-mosip-auth-v1.2.jar", "-jar","-Dspring.cloud.config.label=${spring_config_label_env}","-Dspring.profiles.active=${active_profile_env}","-Dspring.cloud.config.uri=${spring_config_url_env}", "/${current_module_env}.jar"]

